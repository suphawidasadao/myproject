"use client";

import Image from 'next/image';
import React, { useState, useEffect } from "react";
import { useRouter, useSearchParams } from 'next/navigation';
import { useParams } from "next/navigation";
import Footer from '@/app/components/footer';
import Navbar from '@/app/components/navbar';
import Link from 'next/link';

const CarDetailPage = () => {
    const { id } = useParams();
    const searchParams = useSearchParams();
    const router = useRouter();
    const [car, setCar] = useState(null);
    const [loading, setLoading] = useState(true);
    const [days, setDays] = useState(1);
    const [totalPrice, setTotalPrice] = useState(0);
    const [deliveryFee, setDeliveryFee] = useState(0); // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å `locations`

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å URL
    const pickupDateStr = searchParams.get("pickup");
    const returnDateStr = searchParams.get("return");

    // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
    const formatDateTime = (dateStr) => {
        if (!dateStr) return "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
        const date = new Date(dateStr);
        return date.toLocaleString("th-TH", {
            year: "numeric", month: "long", day: "numeric",
            hour: "2-digit", minute: "2-digit", hour12: false
        }) + " ‡∏ô.";
    };

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ
    useEffect(() => {
        if (!id) return;

        fetch(`/api/cars/${id}`)
            .then(res => res.json())
            .then(data => {
                setCar(data.car || null);
                setLoading(false);

                // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ locations ‡πÉ‡∏´‡πâ‡∏ô‡∏≥‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ä‡πâ
                if (data.car.locations && data.car.locations.length > 0) {
                    const fee = data.car.locations.reduce((acc, loc) => acc + loc.fee, 0); // ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á
                    setDeliveryFee(fee);
                }
            })
            .catch(error => {
                console.error("‚ùå Fetch error:", error);
                setLoading(false);
            });
    }, [id]);

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô
    useEffect(() => {
        if (!pickupDateStr || !returnDateStr) return;

        const pickupDate = new Date(pickupDateStr);
        const returnDate = new Date(returnDateStr);
        const diffTime = returnDate - pickupDate;
        const calculatedDays = Math.max(1, Math.ceil(diffTime / (1000 * 60 * 60 * 24)));

        setDays(calculatedDays);
    }, [pickupDateStr, returnDateStr]);

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    useEffect(() => {
        if (car) {
            const pricePerDay = car.price || 0;
            setTotalPrice(pricePerDay * days + deliveryFee); // ‚úÖ ‡∏ö‡∏ß‡∏Å‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å locations
        }
    }, [car, days, deliveryFee]);

    if (loading) return <p className="text-center text-gray-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
    if (!car) return <p className="text-center text-red-500">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ</p>;

    return (
        <div className="relative">
            <Navbar />

            <div className="container mx-auto px-6 lg:px-24 py-6">
                {/* üîó Breadcrumbs */}
                <ul className="mb-4 flex space-x-2 text-sm text-gray-500">
                    <li><Link href="/" className="hover:text-blue-600">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</Link></li>
                    <li>&gt;</li>
                    <li><Link href="/cars" className="hover:text-blue-600">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Link></li>
                    <li>&gt;</li>
                    <li><Link href="#" className="text-blue-600">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏ñ</Link></li>
                </ul>

                {/* ‚úÖ **‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏ñ** */}
                <h1 className="text-2xl font-bold text-gray-800 mb-6">{car.name}</h1>

                {/* ‚úÖ **‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ñ** */}
                <div className="grid grid-cols-2 md:grid-cols-3 gap-4 mb-8">
                    {car.images.map((image, index) => (
                        <Image
                            key={index}
                            src={image || "/placeholder-car.jpg"}
                            alt={car.name}
                            width={600}
                            height={400}
                            className="rounded-lg object-cover"
                        />
                    ))}
                </div>

                {/* ‚úÖ **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ** */}
                <div className="grid grid-cols-1 lg:grid-cols-2 gap-16">
                    {/* ‚úÖ **‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏ñ** */}
                    <div className="grid grid-cols-2 gap-x-12 gap-y-8">
                        {[
                            { icon: "üöó", label: "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ", value: car.type },
                            { icon: "‚öôÔ∏è", label: "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå", value: car.transmission },
                            { icon: "üë•", label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", value: `${car.seats} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á` },
                            { icon: "‚õΩ", label: "‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏¥‡∏á", value: car.fuel },
                            { icon: "üöÄ", label: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏ô‡∏ï‡πå", value: `${car.engine} CC` },
                            { icon: "üö™", label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π", value: `${car.doors} ‡∏õ‡∏£‡∏∞‡∏ï‡∏π` },
                            { icon: "üéí", label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏£‡∏∞", value: `${car.luggage} ‡πÉ‡∏ö` },
                            { icon: "üìç", label: "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î", value: car.province },
                        ].map((item, index) => (
                            <div key={index} className="flex items-center gap-4">
                                <span className="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center text-lg">
                                    {item.icon}
                                </span>
                                <div>
                                    <span className="text-sm text-gray-400">{item.label}</span>
                                    <p className="text-base">{item.value}</p>
                                </div>
                            </div>
                        ))}
                    </div>

                    {/* ‚úÖ **‡∏Ç‡∏ß‡∏≤: ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á** */}
                    <div className="bg-white p-4 rounded-xl shadow-md w-full max-w-sm mx-auto">
                        <h2 className="text-base font-semibold mb-4">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h2>

                        {/* ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ */}
                        <div className="mb-4">
                            <p className="flex justify-between">
                                <span className="text-sm">‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ {days} ‡∏ß‡∏±‡∏ô</span>
                                <span className="font-semibold text-sm">‡∏ø{car.price * days}</span>
                            </p>
                            <ul className="ml-4 text-gray-600 text-sm mt-2">
                                <li>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô ‡∏ø{car.price} √ó {days} ‡∏ß‡∏±‡∏ô</li>
                            </ul>
                        </div>

                        {/* ‚úÖ ‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á (‡∏à‡∏≤‡∏Å locations) */}
                        <div className="mb-4 text-sm">
                            <p className="text-sm font-semibold">‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö - ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á</p>

                            {/* ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏ö-‡∏™‡πà‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */}
                            {car.locations?.length > 0 ? (
                                <ul className="ml-4 text-gray-600 text-sm mt-2">
                                    {car.locations.map((loc, index) => (
                                        <li key={index} className="flex justify-between">
                                            <span>{loc.place}</span>
                                            <span className="font-semibold text-green-500">
                                                {loc.fee > 0 ? `‡∏ø${loc.fee}` : "‡∏ü‡∏£‡∏µ"}
                                            </span>
                                        </li>
                                    ))}
                                </ul>
                            ) : (
                                <p className="text-green-500 font-semibold mt-2">‡∏ü‡∏£‡∏µ</p>
                            )}
                        </div>

                        {/* ‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
                        <hr className="border-gray-300 my-4" />
                        <div className="mb-4">
                            <p className="flex justify-between text-sm font-bold">
                                <span>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                                <span className='text-base'>‡∏ø{totalPrice}</span>
                            </p>
                            <p className="flex justify-between text-sm mt-2">
                                <span className='text-gray-600 text-sm'>‡∏Ñ‡πà‡∏≤‡∏°‡∏±‡∏î‡∏à‡∏≥‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏£‡∏ñ (‡πÑ‡∏î‡πâ‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏£‡∏ñ)</span>
                                <span>‡∏ø3000</span>
                            </p>
                        </div>

                        {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ */}
                        <button
                            onClick={() => {
                                // ‡πÅ‡∏õ‡∏•‡∏á pickupDateStr ‡πÅ‡∏•‡∏∞ returnDateStr ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Date ‡πÉ‡∏ô onClick
                                const pickupDate = new Date(pickupDateStr);
                                const returnDate = new Date(returnDateStr);

                                // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á URL
                                router.push(`/rent_car1?carId=${car._id}&name=${car.name}&pickup=${pickupDate.toISOString()}&return=${returnDate.toISOString()}&price=${car.price}&province=${car.province}`);
                            }}
                            className="w-full bg-green-500 text-white py-2 rounded-lg mt-3 text-sm hover:bg-green-600 transition"
                        >
                            ‡πÄ‡∏ä‡πà‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏ô‡∏ô‡∏µ‡πâ
                        </button>

                    </div>
                </div>
            </div>

            <Footer />
        </div>
    );
};

export default CarDetailPage;
